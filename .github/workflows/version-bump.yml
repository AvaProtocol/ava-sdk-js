name: Changeset Version Bump

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: "Version bump type"
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
        default: "patch"

jobs:
  changeset:
    name: Run Changeset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Fetch main branch
        run: |
          git fetch origin main
          git merge-base --is-ancestor origin/main HEAD || echo "Main branch is ahead"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.20"

      - name: Install dependencies
        run: npm ci

      - name: Run Changeset
        id: changeset
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          # Get and log current version
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: ${CURRENT_VERSION}"

          # Create changeset and capture the output
          npx changeset add --empty --message "${COMMIT_MESSAGE}" --type "${{ github.event.inputs.version_type }}"
          
          # Verify changeset creation
          if [ ! -d ".changeset" ]; then
            echo "Error: .changeset directory not created"
            exit 1
          fi

      - name: Review Changeset Files
        run: |
          echo "Checking .changeset directory contents:"
          ls -la .changeset/
          
          # Use find with proper error handling
          find .changeset -type f -not -name "config.json" -not -name "README.md" || echo "No changeset files found"

      - name: Commit and push changes
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Version bump to ${{ steps.changeset.outputs.new_version }}: ${COMMIT_MSG}" || echo "No changes to commit"
          git push
